package com.usuario.service.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.usuario.service.entity.Usuario;
import com.usuario.service.models.Cuaderno;
import com.usuario.service.models.Libro;
import com.usuario.service.service.UsuarioService;

@RestController
@RequestMapping("/usuario")
public class UsuarioController {
	
	@Autowired
	private UsuarioService usuarioService;
	
	@GetMapping
	public ResponseEntity<List<Usuario>> listarUsuarios(){
		List<Usuario> usuarios =usuarioService.getAll();
		if(usuarios.isEmpty()) {
			return ResponseEntity.noContent().build();
		}
		return ResponseEntity.ok(usuarios);
	}
	
	
	@GetMapping("/{id}")
	public ResponseEntity<Usuario> obtenerUsuario(@PathVariable("id") int id) {
	    Usuario usuario = usuarioService.getUsuarioById(id);
	    if (usuario == null) {
	        return ResponseEntity.notFound().build();
	    }
	    return ResponseEntity.ok(usuario);
	}
	
	@PostMapping
	public ResponseEntity<Usuario> guardarUsuario(@RequestBody Usuario usuario){
		Usuario nuevoUsuario = usuarioService.save(usuario);
		return ResponseEntity.ok(nuevoUsuario);
	}
	
	@PostMapping("/cuaderno/{usuarioId}")
	public ResponseEntity<Cuaderno> guardarCuaderno(@PathVariable("usuarioId") int usuarioId,@RequestBody Cuaderno cuaderno){
		Cuaderno nuevoCuaderno = usuarioService.saveCuaderno(usuarioId, cuaderno);
		return ResponseEntity.ok(nuevoCuaderno);
	}
	
	@PostMapping("/libro/{usuarioId}")
	public ResponseEntity<Libro> guardarLibro(@PathVariable("usuarioId") int usuarioId,@RequestBody Libro libro){
		Libro nuevoLibro = usuarioService.saveLibro(usuarioId, libro);
		return ResponseEntity.ok(nuevoLibro);
	}
	

}
